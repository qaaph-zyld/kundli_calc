"""Initial migration

Revision ID: 26b1e8b640ca
Revises: 
Create Date: 2024-12-28 04:08:27.312661

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '26b1e8b640ca'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('birth_charts',
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('birth_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('place_name', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_birth_charts_id'), 'birth_charts', ['id'], unique=False)
    op.create_table('dasha_periods',
    sa.Column('birth_chart_id', sa.String(length=36), nullable=True),
    sa.Column('dasha_type', sa.String(length=50), nullable=False),
    sa.Column('planet_name', sa.String(length=50), nullable=False),
    sa.Column('sub_planet_name', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['birth_chart_id'], ['birth_charts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dasha_periods_id'), 'dasha_periods', ['id'], unique=False)
    op.create_table('divisional_charts',
    sa.Column('birth_chart_id', sa.String(length=36), nullable=True),
    sa.Column('division_type', sa.String(length=50), nullable=False),
    sa.Column('planet_name', sa.String(length=50), nullable=False),
    sa.Column('house', sa.Integer(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('zodiac_sign', sa.String(length=50), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['birth_chart_id'], ['birth_charts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_divisional_charts_id'), 'divisional_charts', ['id'], unique=False)
    op.create_table('house_systems',
    sa.Column('birth_chart_id', sa.String(length=36), nullable=True),
    sa.Column('system_name', sa.String(length=50), nullable=False),
    sa.Column('house_number', sa.Integer(), nullable=False),
    sa.Column('cusp_longitude', sa.Float(), nullable=False),
    sa.Column('sign', sa.String(length=50), nullable=True),
    sa.Column('degree', sa.Float(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['birth_chart_id'], ['birth_charts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_house_systems_id'), 'house_systems', ['id'], unique=False)
    op.create_table('planetary_positions',
    sa.Column('birth_chart_id', sa.String(length=36), nullable=True),
    sa.Column('planet_name', sa.String(length=50), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('house', sa.Integer(), nullable=True),
    sa.Column('zodiac_sign', sa.String(length=50), nullable=True),
    sa.Column('nakshatra', sa.String(length=50), nullable=True),
    sa.Column('nakshatra_pada', sa.Integer(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['birth_chart_id'], ['birth_charts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_planetary_positions_id'), 'planetary_positions', ['id'], unique=False)
    op.create_table('yoga_combinations',
    sa.Column('birth_chart_id', sa.String(length=36), nullable=True),
    sa.Column('yoga_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('strength', sa.Float(), nullable=True),
    sa.Column('planets_involved', sa.String(length=255), nullable=True),
    sa.Column('houses_involved', sa.String(length=255), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['birth_chart_id'], ['birth_charts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_yoga_combinations_id'), 'yoga_combinations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_yoga_combinations_id'), table_name='yoga_combinations')
    op.drop_table('yoga_combinations')
    op.drop_index(op.f('ix_planetary_positions_id'), table_name='planetary_positions')
    op.drop_table('planetary_positions')
    op.drop_index(op.f('ix_house_systems_id'), table_name='house_systems')
    op.drop_table('house_systems')
    op.drop_index(op.f('ix_divisional_charts_id'), table_name='divisional_charts')
    op.drop_table('divisional_charts')
    op.drop_index(op.f('ix_dasha_periods_id'), table_name='dasha_periods')
    op.drop_table('dasha_periods')
    op.drop_index(op.f('ix_birth_charts_id'), table_name='birth_charts')
    op.drop_table('birth_charts')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
